/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 Mickael Jeanroy, Cedric Nisio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// -------------------------------------------------------------------------- \\
// Mixins use to fix width.                                                   \\
// -------------------------------------------------------------------------- \\
.fixed-width(@width) {
  width: @width;
  min-width: @width;
  max-width: @width;
}

// -------------------------------------------------------------------------- \\
// Mixins for text-overflow property                                          \\
// -------------------------------------------------------------------------- \\
.text-overflow(@type) {
  word-wrap: normal;
  white-space: nowrap;
  overflow: hidden;
  -o-text-overflow: @type;
     text-overflow: @type;
}

// -------------------------------------------------------------------------- \\
// Mixins use to clear float effect.                                          \\
// https://css-tricks.com/all-about-floats/                                   \\
// -------------------------------------------------------------------------- \\
.clearfix() {
  content: ' ';
  display: block;
  visibility: hidden;
  height: 0;
  clear: both;
}

// -------------------------------------------------------------------------- \\
// Mixins use to generate box-shadow with inset effect.                       \\
// -------------------------------------------------------------------------- \\
.inset-box-shadow(@x, @y, @blur, @spread, @color) {
  -webkit-box-shadow: inset @x @y @blur @spread @color;
     -moz-box-shadow: inset @x @y @blur @spread @color;
       -o-box-shadow: inset @x @y @blur @spread @color;
          box-shadow: inset @x @y @blur @spread @color;
}

// -------------------------------------------------------------------------- \\
// Mixins use to user-select effect.                                          \\
// https://developer.mozilla.org/en-US/docs/Web/CSS/user-select               \\
// http://css-tricks.com/almanac/properties/u/user-select/                    \\
// -------------------------------------------------------------------------- \\
.drop-select() {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
       -o-user-select: none;
          user-select: none;
}

// -------------------------------------------------------------------------- \\
// Mixins use to set opacity value.                                           \\
// https://developer.mozilla.org/en-US/docs/Web/CSS/user-select               \\
// http://css-tricks.com/almanac/properties/u/user-select/                    \\
// -------------------------------------------------------------------------- \\
.opacity(@value) {
  @ieValue: @value * 100;

   // IE 8
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=@{ieValue})";

  -webkit-opacity: @value;
     -moz-opacity: @value;
          opacity: @value;
}

// -------------------------------------------------------------------------- \\
// Mixins use to create arrows in pure css.                                   \\
// http://css-tricks.com/snippets/css/css-triangle/                           \\
// @param size Size of arrow                                                  \\
// @param direction Direction of arrow (top or bottom)                        \\
// -------------------------------------------------------------------------- \\
.arrow(@size, @direction) {
  position: absolute;
  width: 0;
  height: 0;
  border-left: @size solid transparent;
  border-right: @size solid transparent;
  top: 50%;
  right: @size;
  content: '';

  & when (@direction = 'bottom') {
    border-top: @size solid black;
    border-bottom: 0;
    margin-bottom: -@size;
  }
  & when (@direction = 'top') {
    border-bottom: @size solid black;
    border-top: 0;
    margin-top: -@size;
  }
}

.waffle-grid {
  th {
    @arrow-size: 5px;

    // Css class added to sortable column
    &.waffle-sortable {
      cursor: pointer;
      position: relative;

      // Drop user selection
      .drop-select();
    }

    // Css class added to column sorted in ascendant order
    &.waffle-sortable-asc {
      &:before {
        .arrow(@arrow-size, 'top');
      }
    }

    // Css class added to column sorted in descendant order
    &.waffle-sortable-desc {
      &:before {
        .arrow(@arrow-size, 'bottom');
      }
    }
  }

  input,
  select {
    width: 100%;
    padding: 1px 0;
    margin: 0;
    height: auto;
  }

  .waffle-draggable {
    cursor: pointer;

    .drop-select();

    &.waffle-draggable-drag {
      .opacity(0.5);
    }

    &.waffle-draggable-over {
      .inset-box-shadow(0px, 0px, 10px, 1px, #aaa);
    }
  }
}

// -------------------------------------------------------------------------- \\
// Css class added to grid with selection option.                             \\
// -------------------------------------------------------------------------- \\

.waffle-selectable {
  .waffle-selectable {
    cursor: pointer;
  }

  // Fix column width
  .waffle-checkbox {
    text-align: center;
    .fixed-width(30px);

    span {
      display: block;
      margin: 0;
      padding: 0;
      text-align: center;
      width: 100%;
      font-size: 10px;

      .text-overflow(ellipsis);

      // Not visible by default, should be activated.
      display: none;
    }
  }

  [type="checkbox"] {
    cursor: pointer;
  }

  tr {
    &.waffle-selected > td {
      background-color: #d9edf7;
    }
  }
}

// -------------------------------------------------------------------------- \\
// Fixed header for scroll handling.                                          \\
// http://jsfiddle.net/drueter/yqgB5/16/                                      \\
// by https://github.com/DavidRueter                                          \\
// -------------------------------------------------------------------------- \\

// This class will be added automatically to the table element
// if table must be scrollable.
.waffle-fixedheader {
  table-layout: fixed;

  > tfoot,
  > thead {
    width: 100%;
  }

  > tbody {
    overflow-y: scroll;
  }

  > tfoot,
  > thead,
  > tbody {
    display: block;
    float: left;

    &:after {
      .clearfix();
    }

    > tr {
      table-layout: fixed;

      > th,
      > td {
        word-wrap: break-word;
        vertical-align: middle;
        table-layout: fixed;
      }
    }
  }

  // Fix Twitter Bootstrap borders
  // We need to hide some border-left to simulate collapse
  // with cells and table borders

  &.table,
  &.table-bordered {
    > thead {
      // This is the default border color with twitter bootstrap.
      // It should be overridden by users with a custom twitter
      // bootstrap build, or to customize border colors
      border-bottom-width: 2px;
      border-bottom-style: inherit;
      border-bottom-color: inherit;

      th {
        border-bottom: 0;
      }
    }

    > tfoot {
      border-top-width: 2px;
      border-top-style: inherit;
      border-top-color: inherit;

      th {
        border-bottom: 0;
        border-top: 0;
      }
    }
  }

  &.table-bordered {
    border-left: 0;

    > tbody > tr:first-child > td {
      border-top: 0;
    }

    > thead > tr > th,
    > tfoot > tr > th,
    > tbody > tr > td:not(:last-child) {
      border-right: 0;
    }

    > tbody > tr > td {
      border-bottom: 0;
    }
  }
}
