/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 Mickael Jeanroy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * --------------------------------------------------------------------------*\
 * Mixins use to clear float effect.                                         *\
 * https://css-tricks.com/all-about-floats/                                  *\
 * --------------------------------------------------------------------------*\
 */
.clearfix() {
  content: ' ';
  display: block;
  visibility: hidden;
  height: 0;
  clear: both;
}

/**
 * --------------------------------------------------------------------------*\
 * Mixins use to user-select effect.                                         *\
 * https://developer.mozilla.org/en-US/docs/Web/CSS/user-select              *\
 * http://css-tricks.com/almanac/properties/u/user-select/                   *\
 * --------------------------------------------------------------------------*\
 */
.drop-select() {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
       -o-user-select: none;
          user-select: none;
}

/**
 * --------------------------------------------------------------------------*\
 * Mixins use to create arrows in pure css.                                  *\
 * http://css-tricks.com/snippets/css/css-triangle/                          *\
 * @param size Size of arrow                                                 *\
 * @param direction Direction of arrow (top or bottom)                       *\
 * --------------------------------------------------------------------------*\
 */
.arrow(@size, @direction) {
  position: absolute;
  width: 0;
  height: 0;
  border-left: @size solid transparent;
  border-right: @size solid transparent;
  top: 50%;
  right: @size;
  content: '';

  & when (@direction = 'bottom') {
    border-top: @size solid black;
    border-bottom: 0;
    margin-bottom: -@size;
  }
  & when (@direction = 'top') {
    border-bottom: @size solid black;
    border-top: 0;
    margin-top: -@size;
  }
}

th {
  @arrow-size: 5px;

  // Css class added to sortable column
  &.waffle-sortable {
    cursor: pointer;
    position: relative;

    // Drop user selection
    .drop-select();
  }

  // Css class added to column sorted in ascendant order
  &.waffle-sortable-asc {
    &:before {
      .arrow(@arrow-size, 'top');
    }
  }

  // Css class added to column sorted in descendant order
  &.waffle-sortable-desc {
    &:before {
      .arrow(@arrow-size, 'bottom');
    }
  }
}

/**
 * --------------------------------------------------------------------------*\
 * Fixed header for scroll handling.                                         *\
 * http://jsfiddle.net/drueter/yqgB5/16/                                     *\
 * by https://github.com/DavidRueter                                         *\
 * --------------------------------------------------------------------------*\
 */

// This class will be added automatically to the table element
// if table must be scrollable.
.waffle-fixedheader {
  table-layout: fixed;

  > thead {
    width: 100%;
  }

  > tbody {
    overflow-y: scroll;
  }

  > thead,
  > tbody {
    display: block;
    float: left;

    &:after {
      .clearfix();
    }

    > tr {
      table-layout: fixed;

      > th,
      > td {
        word-wrap: break-word;
        vertical-align: middle;
        table-layout: fixed;
      }
    }
  }

  // Fix Twitter Bootstrap borders
  // We need to hide some border-left to simulate collapse
  // with cells and table borders

  &.table,
  &.table-bordered {
    > thead {
      // This is the default border color with twitter bootstrap.
      // It should be overridden by users with a custom twitter
      // bootstrap build, or to customize border colors
      border-bottom-width: 2px;
      border-bottom-style: inherit;
      border-bottom-color: inherit;

      th {
        border-bottom: 0;
      }
    }
  }

  &.table-bordered {
    border-left: 0;

    > tbody > tr:first-child > td {
      border-top: 0;
    }

    > thead > tr > th,
    > tbody > tr > td:not(:last-child) {
      border-right: 0;
    }

    > tbody > tr > td {
      border-bottom: 0;
    }
  }
}
